var pokemonRepository = (function() {
  var e = [],
    o = 'https://pokeapi.co/api/v2/pokemon/?limit=150';
  function t(o) {
    'object' == typeof o
      ? e.push(o)
      : console.log('only objects with predetermined keys can be added!');
  }
  function a(e) {
    var o = $('#modal-container'),
      t = $(
        '<div class="modal" tabindex="-1" role="dialog" aria-labelledby="pokemon-name" aria-hidden="true">'
      ),
      a = $('<div class="modal-dialog" role="document"></div>'),
      n = $('<div class="modal-content"></div>'),
      i = $('<div class="modal-header"></div>'),
      s = $('<h5 class="modal-title" id="pokemon-name"></h5>'),
      l = $(
        '<button type="button" class="close modal-close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>'
      ),
      p = $('<div class="modal-body"></div>'),
      d = $('<div class="modal-footer"></div'),
      c = $(
        '<button type="button" class="btn btn-info modal-close" data-dismiss="modal">Close</button>'
      ),
      r = s.text(e.name[0].toUpperCase() + e.name.slice(1)),
      m = $(
        '<img class="pokemon-img" alt="a picture of current pokemon">'
      ).attr('src', e.imageUrl),
      u = $('<p class="pokemon-height"></p>').text('Height: ' + e.height),
      h = $('<p class="pokemon-types"></p>').text('Types: ' + e.types);
    console.log(e),
      s.append(r),
      p.append(m),
      p.append(u),
      p.append(h),
      d.append(c),
      i.append(s),
      i.append(l),
      n.append(i),
      n.append(p),
      n.append(d),
      a.append(n),
      t.append(a),
      o.append(t),
      $('.modal-close').click(function() {
        $('.modal-backdrop').remove(),
          o.empty(),
          $('body').removeClass('modal-open');
      });
  }
  return {
    getAll: function() {
      return e;
    },
    add: t,
    addListItem: function(e) {
      var o = $('.pokemon-list'),
        t = $(
          '<button type="button" class="list-group-item list-group-item-action" data-toggle="modal" data-target=".modal"></button>'
        ).text(e.name[0].toUpperCase() + e.name.slice(1));
      o.append(t),
        t.on('click', function(o) {
          a(e);
        });
    },
    showDetails: a,
    loadList: function() {
      return $.ajax(o, { dataType: 'json' })
        .then(function(e) {
          $.each(e.results, function(e, o) {
            t({ name: o.name, detailsUrl: o.url });
          });
        })
        .catch(function(e) {
          console.error(e);
        });
    },
    loadDetails: function(e) {
      var o = e.detailsUrl;
      return $.ajax(o)
        .then(function(o) {
          (e.imageUrl = o.sprites.front_default),
            (e.height = o.height),
            (e.types = e.types = o.types.map(function(e) {
              return ' ' + e.type.name;
            }));
        })
        .catch(function(e) {
          console.error(e);
        });
    }
  };
})();
pokemonRepository.loadList().then(function() {
  $.each(pokemonRepository.getAll(), function(e, o) {
    pokemonRepository.loadDetails(o), pokemonRepository.addListItem(o);
  });
}),
  $(document).ready(function() {
    $('#pokemon-search').on('keyup', function() {
      var e = $(this)
        .val()
        .toLowerCase();
      $('.list-group-item').filter(function() {
        $(this).toggle(
          $(this)
            .text()
            .toLowerCase()
            .indexOf(e) > -1
        );
      });
    });
  });
